(define $hankaku-kana? 
  (lambda [$c]
    (C.between? '｡' 'ﾟ')))

(define $normalize-kana
  (lambda [$c]
    (if (hankaku-kana? c)
      (nth (- (ctoi c) (ctoi '｡') -1) (unpack "。「」、・ヲァィゥェォャュョッーアイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワン゛゜"))
      c)))

(define $katakana?
  (lambda [$c]
    (C.between? 'ァ' 'ヾ')))

(define $katakanas?
  (lambda [$s]
    (all katakana? (unpack s))))

(define $katakana-to-yomi
  (lambda [$s]
    (match s string
      {[<cons ,'ッ' $rs>
        (katakana-to-yomi rs)]
       [<cons ,'ー' $rs>
        (katakana-to-yomi rs)]
       [<cons (& (| ,'ァ' ,'ィ' ,'ゥ' ,'ェ' ,'ォ') $c) <cons ,'ー' $rs>>
        (S.concat {(match c char {[,'ァ' "A"] [,'ィ' "I"] [,'ゥ' "U"] [,'ェ' "E"] [,'ォ' "O"]}) (katakana-to-yomi rs)})]
       [<cons (& (| ,'ァ' ,'ィ' ,'ゥ' ,'ェ' ,'ォ') $c) $rs>
        (S.concat {(match c char {[,'ァ' "A"] [,'ィ' "I"] [,'ゥ' "U"] [,'ェ' "E"] [,'ォ' "O"]}) (katakana-to-yomi rs)})]
       [<cons (& (| ,'ャ' ,'ュ' ,'ョ') $c) <cons ,'ー' $rs>>
        (S.concat {(match c char {[,'ャ' "YA"] [,'ュ' "YU"] [,'ョ' "YO"]}) (katakana-to-yomi rs)})]
       [<cons (& (| ,'ャ' ,'ュ' ,'ョ') $c) $rs>
        (S.concat {(match c char {[,'ャ' "YA"] [,'ュ' "YU"] [,'ョ' "YO"]}) (katakana-to-yomi rs)})]
       [<cons $c1 <cons (& (| ,'ャ' ,'ュ' ,'ョ') $c2) <cons ,'ー' $rs>>>
        (S.append (katakana-to-yomi-y-1 (pack {c1 c2})) (katakana-to-yomi rs))]
       [<cons $c1 <cons (& (| ,'ャ' ,'ュ' ,'ョ') $c2) $rs>>
        (S.append (katakana-to-yomi-y-1 (pack {c1 c2})) (katakana-to-yomi rs))]
       [<cons $c1 <cons (& (| ,'ァ' ,'ィ' ,'ゥ' ,'ェ' ,'ォ') $c2) <cons ,'ー' $rs>>>
        (S.append (katakana-to-yomi-x-1 (pack {c1 c2})) (katakana-to-yomi rs))]
       [<cons $c1 <cons (& (| ,'ァ' ,'ィ' ,'ゥ' ,'ェ' ,'ォ') $c2) $rs>>
        (S.append (katakana-to-yomi-x-1 (pack {c1 c2})) (katakana-to-yomi rs))]
       [<cons $c <cons ,'ー' $rs>>
        (S.append (katakana-to-yomi-1 (pack {c})) (katakana-to-yomi rs))]
       [<cons $c $rs>
        (S.append (katakana-to-yomi-1 (pack {c})) (katakana-to-yomi rs))]
       [<nil> ""]
       })))

(define $katakana-to-yomi-y-1
  (lambda [$cs]
    (match cs string
      {[,"キャ" "KYA"] [,"キュ" "KYU"] [,"キョ" "KYO"]
       [,"ギャ" "GYA"] [,"ギュ" "GYU"] [,"ギョ" "GYO"]
       [,"シャ" "SHA"] [,"シュ" "SHU"] [,"ショ" "SHO"]
       [,"ジャ" "JA"] [,"ジュ" "JU"] [,"ジョ" "JO"]
       [,"チャ" "CHA"] [,"チュ" "CHU"] [,"チョ" "CHO"]
       [,"ヂャ" "JA"] [,"ヂュ" "JU"] [,"ヂョ" "JO"]
       [,"ニャ" "NYA"] [,"ニュ" "NU"] [,"ニョ" "NO"]
       [,"ヒャ" "HYA"] [,"ヒュ" "HYU"] [,"ヒョ" "HYO"]
       [,"ビャ" "BYA"] [,"ビュ" "BYU"] [,"ビョ" "BYO"]
       [,"ピャ" "PYA"] [,"ピュ" "PYU"] [,"ピョ" "PYO"]
       [,"ミャ" "MYA"] [,"ミュ" "MYU"] [,"ミョ" "MYO"]
       [,"リャ" "RYA"] [,"リュ" "RYU"] [,"リョ" "RYO"]
       [,"フュ" "FYU"] [,"テュ" "CHU"] [,"デュ" "DYU"]
       [<cons $c1 <cons $c2 <nil>>> (S.append (katakana-to-yomi-1 (pack {c1})) (match c2 char {[,'ャ' "YA"] [,'ュ' "YA"] [,'ョ' "YA"]}))]
       })))

(define $katakana-to-yomi-x-1
  (lambda [$cs]
    (match cs string
      {[,"ウィ" "WI"] [,"ウェ" "WE"] [,"ウォ" "WO"]
       [,"キィ" "KI"]
       [,"クァ" "KA"] [,"クィ" "KI"] [,"クェ" "KE"] [,"クォ" "KO"]
       [,"シィ" "SI"] [,"シェ" "SHE"]
       [,"ジェ" "JE"]
       [,"ツァ" "TSA"] [,"ツィ" "TSI"] [,"ツゥ" "TSU"] [,"ツェ" "TSE"] [,"ツォ" "TSO"] 
       [,"チェ" "CHE"]
       [,"ファ" "FA"] [,"フィ" "FI"] [,"フェ" "FE"] [,"フォ" "FO"]
       [,"ヴァ" "VA"] [,"ヴィ" "VI"] [,"ヴェ" "VE"] [,"ヴォ" "VO"]
       [,"シィ" "SI"] [,"スィ" "SI"] [,"ズィ" "ZI"]
       [,"ティ" "TI"] [,"ディ" "DI"]
       [,"トゥ" "TU"] [,"ヅゥ" "DU"] [,"ドゥ" "DU"]
       [<cons $c1 <cons $c2 <nil>>> (S.append (katakana-to-yomi-1 (pack {c1})) (match c2 char {[,'ァ' "A"] [,'ィ' "I"] [,'ゥ' "U"] [,'ェ' "E"] [,'ォ' "O"]}))]
       })))

(define $katakana-to-yomi-1
  (lambda [$cs]
    (match cs string
      {[,"ア" "A"] [,"イ" "I"] [,"ウ" "U"] [,"エ" "E"] [,"オ" "O"]
       [,"カ" "KA"] [,"キ" "KI"] [,"ク" "KU"] [,"ケ" "KE"] [,"コ" "KO"]
       [,"サ" "SA"] [,"シ" "SHI"] [,"ス" "SU"] [,"セ" "SE"] [,"ソ" "SO"]
       [,"タ" "TA"] [,"チ" "CHI"] [,"ツ" "TSU"] [,"テ" "TE"] [,"ト" "TO"]
       [,"ナ" "NA"] [,"ニ" "NI"] [,"ヌ" "NU"] [,"ネ" "NE"] [,"ノ" "NO"]
       [,"ハ" "HA"] [,"ヒ" "HI"] [,"フ" "FU"] [,"ヘ" "HE"] [,"ホ" "HO"]
       [,"マ" "MA"] [,"ミ" "MI"] [,"ム" "MU"] [,"メ" "ME"] [,"モ" "MO"]
       [,"ヤ" "YA"] [,"ユ" "YU"] [,"ヨ" "YO"]
       [,"ラ" "RA"] [,"リ" "RI"] [,"ル" "RU"] [,"レ" "RE"] [,"ロ" "RO"]
       [,"ワ" "WA"] [,"ヲ" "O"] [,"ン" "N"]
       [,"ガ" "GA"] [,"ギ" "GI"] [,"グ" "GU"] [,"ゲ" "GE"] [,"ゴ" "GO"]
       [,"ザ" "ZA"] [,"ジ" "JI"] [,"ズ" "ZU"] [,"ゼ" "ZE"] [,"ゾ" "ZO"]
       [,"ダ" "DA"] [,"ヂ" "DI"] [,"ヅ" "DU"] [,"デ" "DE"] [,"ド" "DO"]
       [,"バ" "BA"] [,"ビ" "BI"] [,"ブ" "BU"] [,"ベ" "BE"] [,"ボ" "BO"]
       [,"パ" "PA"] [,"ピ" "PI"] [,"プ" "PU"] [,"ペ" "PE"] [,"ポ" "PO"]
       [,"ヴ" "VU"] [,"ヰ" "I"] [,"ヱ" "E"] [,"ヮ" "WA"]
       [,"ヵ" "KA"] [,"ヶ" "KE"]
       })))
